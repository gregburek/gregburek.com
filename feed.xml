<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Greg Burek</title>
  <subtitle>Greg writes things</subtitle>
  <id>http://blog.gregburek.com/</id>
  <link href="http://blog.gregburek.com/"/>
  <link href="http://blog.gregburek.com/feed.xml" rel="self"/>
  <updated>2017-09-02T05:06:00+00:00</updated>
  <author>
    <name>Greg Burek</name>
  </author>
  <entry>
    <title>Running Node.js inside Postgres, Part Mea Culpa</title>
    <link rel="alternate" href="/2017/09/01/running-node-js-inside-postgres-part-mea-culpa/"/>
    <id>/2017/09/01/running-node-js-inside-postgres-part-mea-culpa/</id>
    <published>2017-09-02T05:06:00+00:00</published>
    <updated>2017-09-02T05:06:00+00:00</updated>
    <author>
      <name>Greg Burek</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="/2016/10/08/running-node-js-inside-postgres-part-1"&gt;Previously&lt;/a&gt;, I wrote about
trying to run node.js code in PLV8 in Postgres. Unfortunately, that effort
sputtered out once I
&lt;a href="https://stackoverflow.com/questions/12666148/does-plv8-support-making-http-calls-to-other-servers"&gt;found&lt;/a&gt;
&lt;a href="https://github.com/plv8/plv8/issues/190"&gt;out&lt;/a&gt;
that PLV8 is a &amp;lsquo;trusted&amp;rsquo; languagefor postgres. As documented for
&lt;a href="https://www.postgresql.org/docs/current/static/plperl-trusted.html"&gt;PL/Perl&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Normally, PL/Perl is installed as a &amp;ldquo;trusted&amp;rdquo; programming language named
plperl. In this setup, certain Perl operations are disabled to preserve
security. In general, the operations that are restricted are those that
interact with the environment. This includes file handle operations, require,
and use (for external modules). There is no way to access internals of the
database server process or to gain OS-level access with the permissions of
the server process, as a C function can do. Thus, any unprivileged database
user can be permitted to use this language.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, no filesystem access means no unix socket access, which means no network
access. &lt;code&gt;¯\_(ツ)_/¯&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If &lt;a href="https://github.com/plv8/plv8/issues/222"&gt;plv8u&lt;/a&gt; lands, I can revisit my
previous goal, but until then&amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Running Node.js inside Postgres, Part 1</title>
    <link rel="alternate" href="/2016/10/08/running-node-js-inside-postgres-part-1/"/>
    <id>/2016/10/08/running-node-js-inside-postgres-part-1/</id>
    <published>2016-10-08T22:09:00+00:00</published>
    <updated>2016-10-08T22:09:00+00:00</updated>
    <author>
      <name>Greg Burek</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="https://github.com/plv8/plv8"&gt;PLV8&lt;/a&gt; is a procedural language for Postgres,
that runs JavaScript, powered by the
&lt;a href="https://en.wikipedia.org/wiki/V8_(JavaScript_engine)"&gt;V8&lt;/a&gt; runtime. This allows
generic JavaScript code to be executed on a Postgres host, with the same
runtime that the web browser Chrome uses. So, it follows that most code that
could run in a browser should also be able to be run in Postgres.&lt;/p&gt;

&lt;p&gt;PLV8 has been an extension of Postgres since version 9.2, and has been
available on &lt;a href="https://devcenter.heroku.com/articles/heroku-postgres-extensions-postgis-full-text-search#languages"&gt;Heroku
Postgres&lt;/a&gt;
professional tier databases for about as long.&lt;/p&gt;

&lt;h1 id="this-is-probably-a-bad-idea"&gt;This is probably a bad idea&lt;/h1&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;While potentially powerful, I personally have not seen much use of PLV8 other
than causing Out of Memory errors on busy Postgres dbs.&lt;/p&gt;

&lt;p&gt;This series of posts aims to document my attempts to use node modules and npm
in PLV8 to develop a simple js app that uses Postgres as a runtime for the V8
runtime.&lt;/p&gt;

&lt;p&gt;To be fair, this is one of my first attempts at using node and npm, so these
posts will be about that as much as anything.&lt;/p&gt;

&lt;h1 id="why"&gt;Why?&lt;/h1&gt;

&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Why use node when you can use Postgres as your JavaScript runtime?&lt;/p&gt;&amp;mdash; Damaged Guids (@t_crayford) &lt;a href="https://twitter.com/t_crayford/status/784529763603976192"&gt;October 7, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;Why not?&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/S0YQYR4.jpg" alt="Why not Postgres?" /&gt;&lt;/p&gt;

&lt;h1 id="goal"&gt;Goal&lt;/h1&gt;

&lt;p&gt;To have a Postgres function that logs into twitter and downloads my home feed to
the database it runs in. I&amp;rsquo;ll limit myself to a Heroku Postgres db, out of my
own convenience. I&amp;rsquo;ll attempt to use
&lt;a href="https://github.com/BoyCook/TwitterJSClient"&gt;twitter-node-client&lt;/a&gt; for this
purpose.&lt;/p&gt;

&lt;p&gt;EDIT: &lt;a href="/2017/09/01/running-node-js-inside-postgres-part-mea-culpa/"&gt;This goal is not currently possible.&lt;/a&gt;&lt;/p&gt;

&lt;h1 id="first-thing-to-attempt"&gt;First thing to attempt&lt;/h1&gt;

&lt;p&gt;A google search for &lt;code&gt;node plv8&lt;/code&gt; led me to the
&lt;a href="https://github.com/clkao/plv8x"&gt;plv8x project&lt;/a&gt;, which provides a cli and
allows importing of npm modules into the db. I&amp;rsquo;ll start here.&lt;/p&gt;

&lt;h2 id="install-node"&gt;Install node&lt;/h2&gt;

&lt;p&gt;I downloaded and installed the &lt;a href="https://nodejs.org/en/download/"&gt;official node
packages&lt;/a&gt; for my system.&lt;/p&gt;

&lt;h2 id="create-a-heroku-app-and-postgres-db"&gt;Create a Heroku app and Postgres DB&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gburek@gburek-ltm2:~/code
&amp;gt; mkdir pg-twitter

gburek@gburek-ltm2:~/code
&amp;gt; cd pg-twitter

gburek@gburek-ltm2:~/code/pg-twitter
&amp;gt; git init
Initialized empty Git repository in /Users/gburek/code/pg-twitter/.git/

gburek@gburek-ltm2:~/code/pg-twitter
&amp;gt; heroku create pg-twitter
Creating ⬢ pg-twitter... done
https://pg-twitter.herokuapp.com/ | https://git.heroku.com/pg-twitter.git

gburek@gburek-ltm2:~/code/pg-twitter
&amp;gt; heroku addons:create heroku-postgresql:standard-0
Creating heroku-postgresql:standard-0 on ⬢ pg-twitter... $50/month
Created postgresql-triangular-47265 as DATABASE_URL
The database should be available in 3-5 minutes.
     ! The database will be empty. If upgrading, you can transfer
     ! data from another database with pg:copy.
Use `heroku pg:wait` to track status
Use heroku addons:docs heroku-postgresql to view documentation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After a few minutes, our new db is available and has plv8 available for use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gburek@gburek-ltm2:~/code/pg-twitter
&amp;gt; heroku pg:wait
Waiting for database postgresql-triangular-47265... available

gburek@gburek-ltm2:~/code/pg-twitter
&amp;gt; heroku pg:psql
---&amp;gt; Connecting to DATABASE_URL
Timing is on.
Expanded display is used automatically.
psql (9.5.3, server 9.5.4)
SSL connection (protocol: TLSv1.2, cipher: ECDHE-RSA-AES256-GCM-SHA384, bits: 256, compression: off)
Type "help" for help.

=&amp;gt; CREATE EXTENSION plv8;
CREATE EXTENSION
Time: 1109.898 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, on to working with plv8x.&lt;/p&gt;

&lt;h2 id="plv8x"&gt;plv8x&lt;/h2&gt;

&lt;p&gt;First, I&amp;rsquo;m going to create a new npm project:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gburek@gburek-ltm2:~/code/pg-twitter
&amp;gt; npm init --yes
Wrote to /Users/gburek/code/pg-twitter/package.json:

{
  "name": "pg-twitter",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;amp;&amp;amp; exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, to install plv8x. Surely, &lt;code&gt;npm install plv8x --save&lt;/code&gt; will work.&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Click here to see 400+ lines of woe, errors and false starts. &lt;/summary&gt;

&amp;ldquo;`
gburek@gburek-ltm2:~/code/pg-twitter
&gt; npm install plv8x &amp;ndash;save
npm WARN prefer global LiveScript@1.2.0 should be installed with -g

&gt; libpq@1.8.5 install /Users/gburek/code/pg-twitter/node_modules/libpq
&gt; node-gyp rebuild

gyp WARN download NVM_NODEJS_ORG_MIRROR is deprecated and will be removed in node-gyp v4, please use NODEJS_ORG_MIRROR
gyp WARN download NVM_NODEJS_ORG_MIRROR is deprecated and will be removed in node-gyp v4, please use NODEJS_ORG_MIRROR
gyp WARN download NVM_NODEJS_ORG_MIRROR is deprecated and will be removed in node-gyp v4, please use NODEJS_ORG_MIRROR
  CXX(target) Release/obj.target/addon/src/connection.o
  CXX(target) Release/obj.target/addon/src/connect-async-worker.o
  CXX(target) Release/obj.target/addon/src/addon.o
  SOLINK_MODULE(target) Release/addon.node
clang: warning: libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9
pg-twitter@1.0.0 /Users/gburek/code/pg-twitter
└─┬ plv8x@0.6.6
  ├── async@0.9.2
  ├─┬ js-yaml@3.0.2
  │ ├─┬ argparse@0.1.16
  │ │ ├── underscore@1.7.0
  │ │ └── underscore.string@2.4.0
  │ └── esprima@1.0.4
  ├─┬ LiveScript@1.2.0
  │ └── prelude-ls@1.0.3
  ├─┬ one@2.5.2
  │ ├── boxcars@2.0.0
  │ ├─┬ debug@2.2.0
  │ │ └── ms@0.7.1
  │ ├── flatten-array@1.0.0
  │ ├── functools@1.4.0
  │ ├─┬ glob@7.1.1
  │ │ ├── fs.realpath@1.0.0
  │ │ ├─┬ inflight@1.0.5
  │ │ │ └── wrappy@1.0.2
  │ │ ├── inherits@2.0.3
  │ │ ├─┬ minimatch@3.0.3
  │ │ │ └─┬ brace-expansion@1.1.6
  │ │ │   ├── balanced-match@0.4.2
  │ │ │   └── concat-map@0.0.1
  │ │ ├── once@1.4.0
  │ │ └── path-is-absolute@1.0.1
  │ └── hogan.js@2.0.0
  ├─┬ optimist@0.6.1
  │ ├── minimist@0.0.10
  │ └── wordwrap@0.0.3
  ├─┬ pg@4.5.6
  │ ├── buffer-writer@1.0.1
  │ ├── generic-pool@2.4.2
  │ ├── packet-reader@0.2.0
  │ ├── pg-connection-string@0.1.3
  │ ├─┬ pg-types@1.11.0
  │ │ ├── ap@0.2.0
  │ │ ├── postgres-array@1.0.0
  │ │ ├── postgres-bytea@1.0.0
  │ │ ├── postgres-date@1.0.3
  │ │ └─┬ postgres-interval@1.0.2
  │ │   └── xtend@4.0.1
  │ ├─┬ pgpass@0.0.3
  │ │ └─┬ split@0.3.3
  │ │   └── through@2.3.8
  │ └── semver@4.3.6
  ├─┬ pg-native@1.10.0
  │ ├─┬ libpq@1.8.5
  │ │ ├── bindings@1.2.1
  │ │ └── nan@2.4.0
  │ ├── pg-types@1.6.0
  │ └─┬ readable-stream@1.0.31
  │   ├── core-util-is@1.0.2
  │   ├── isarray@0.0.1
  │   └── string_decoder@0.10.31
  ├── resolve@0.6.3
  └─┬ tmp@0.0.29
    └── os-tmpdir@1.0.2

npm WARN pg-twitter@1.0.0 No description
npm WARN pg-twitter@1.0.0 No repository field.
&amp;rdquo;`

ok, now to try and run it against my new db:

&amp;ldquo;`
gburek@gburek-ltm2:~/code/pg-twitter
&gt; export PLV8XDB=$(h config:get DATABASE_URL)

gburek@gburek-ltm2:~/code/pg-twitter
&gt; find . -name plv8x
./node_modules/.bin/plv8x
./node_modules/plv8x

gburek@gburek-ltm2:~/code/pg-twitter
&gt; ./node_modules/.bin/plv8x -l
module.js:457
    throw err;
    ^

Error: Cannot find module &amp;lsquo;boxcars&amp;rsquo;
    at Function.Module._resolveFilename (module.js:455:15)
    at Function.Module._load (module.js:403:25)
    at Module.require (module.js:483:17)
    at require (internal/module.js:20:19)
    at Object.&lt;anonymous&gt; (/Users/gburek/code/pg-twitter/node_modules/one/lib/templating/coll.js:1:77)
    at Module._compile (module.js:556:32)
    at Object.Module._extensions..js (module.js:565:10)
    at Module.load (module.js:473:32)
    at tryModuleLoad (module.js:432:12)
    at Function.Module._load (module.js:424:3)

&amp;rdquo;`

welp, this sucks. Maybe I have to install it globally? The README seems to
suggest that.

&amp;ldquo;`
gburek@gburek-ltm2:~/code/pg-twitter
&gt; npm install plv8x -g
/Users/gburek/.nvm/versions/node/v6.7.0/bin/plv8x -&gt; /Users/gburek/.nvm/versions/node/v6.7.0/lib/node_modules/plv8x/bin/cmd.js
&amp;hellip;

gburek@gburek-ltm2:~/code/pg-twitter
&gt; plv8x -l
&gt;
module.js:457
    throw err;
    ^

Error: Cannot find module &amp;lsquo;boxcars&amp;rsquo;
    at Function.Module._resolveFilename (module.js:455:15)
    at Function.Module._load (module.js:403:25)
    at Module.require (module.js:483:17)
    at require (internal/module.js:20:19)
    at Object.&lt;anonymous&gt;
(/Users/gburek/.nvm/versions/node/v6.7.0/lib/node_modules/plv8x/node_modules/one/lib/templating/coll.js:1:77)
    at Module._compile (module.js:556:32)
    at Object.Module._extensions..js (module.js:565:10)
    at Module.load (module.js:473:32)
    at tryModuleLoad (module.js:432:12)
    at Function.Module._load (module.js:424:3)
&amp;rdquo;`

Uh ok. Maybe I need to install from github?

&amp;ldquo;`
gburek@gburek-ltm2:~/code/pg-twitter
&gt; npm uninstall plv8x -g
&amp;hellip;

gburek@gburek-ltm2:~/code/pg-twitter
&gt; npm install https://github.com/clkao/plv8x &amp;ndash;save
npm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue
- boxcars@2.0.0 node_modules/boxcars
- flatten-array@1.0.0 node_modules/flatten-array
- fs.realpath@1.0.0 node_modules/fs.realpath
- functools@1.4.0 node_modules/functools
- hogan.js@2.0.0 node_modules/hogan.js
- ms@0.7.1 node_modules/ms
- debug@2.2.0 node_modules/debug
- one@2.5.2 node_modules/one
- path-is-absolute@1.0.1 node_modules/path-is-absolute
pg-twitter@1.0.0 /Users/gburek/code/pg-twitter
└─┬ plv8x@0.7.0  (git+https://github.com/clkao/plv8x.git#3c19d57adfa5050c27715699d2369d2c441c817d)
&amp;hellip;

npm WARN pg-twitter@1.0.0 No description
npm WARN pg-twitter@1.0.0 No repository field.
npm install https://github.com/clkao/plv8x &amp;ndash;save  10.96s user 2.93s system 85% cpu 16.253 total

gburek@gburek-ltm2:~/code/pg-twitter
&gt; find . -name plv8x
./node_modules/.bin/plv8x
./node_modules/plv8x
./node_modules/plv8x/bin/plv8x

gburek@gburek-ltm2:~/code/pg-twitter
&gt; ./node_modules/plv8x/bin/plv8x -l
module.js:457
    throw err;
    ^

Error: Cannot find module &amp;lsquo;../lib/cli.js&amp;rsquo;
    at Function.Module._resolveFilename (module.js:455:15)
    at Function.Module._load (module.js:403:25)
    at Module.require (module.js:483:17)
    at require (internal/module.js:20:19)
    at Object.&lt;anonymous&gt; (/Users/gburek/code/pg-twitter/node_modules/plv8x/bin/plv8x:2:1)
    at Module._compile (module.js:556:32)
    at Object.Module._extensions..js (module.js:565:10)
    at Module.load (module.js:473:32)
    at tryModuleLoad (module.js:432:12)
    at Function.Module._load (module.js:424:3)
&amp;rdquo;`

Ok. Different error. Progress! Try again, globally, from github.

&amp;ldquo;`
gburek@gburek-ltm2:~/code/pg-twitter
&gt; npm install https://github.com/clkao/plv8x -g
npm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue
/Users/gburek/.nvm/versions/node/v6.7.0/bin/plv8x -&gt; /Users/gburek/.nvm/versions/node/v6.7.0/lib/node_modules/plv8x/bin/plv8x

&gt; libpq@1.8.5 install /Users/gburek/.nvm/versions/node/v6.7.0/lib/node_modules/plv8x/node_modules/libpq
&gt; node-gyp rebuild

gyp WARN download NVM_NODEJS_ORG_MIRROR is deprecated and will be removed in node-gyp v4, please use NODEJS_ORG_MIRROR
gyp WARN download NVM_NODEJS_ORG_MIRROR is deprecated and will be removed in node-gyp v4, please use NODEJS_ORG_MIRROR
gyp WARN download NVM_NODEJS_ORG_MIRROR is deprecated and will be removed in node-gyp v4, please use NODEJS_ORG_MIRROR
  CXX(target) Release/obj.target/addon/src/connection.o
  CXX(target) Release/obj.target/addon/src/connect-async-worker.o
  CXX(target) Release/obj.target/addon/src/addon.o
  SOLINK_MODULE(target) Release/addon.node
clang: warning: libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9
/Users/gburek/.nvm/versions/node/v6.7.0/lib
└─┬ plv8x@0.7.0  (git+https://github.com/clkao/plv8x.git#3c19d57adfa5050c27715699d2369d2c441c817d)
&amp;hellip;

npm install https://github.com/clkao/plv8x -g  13.35s user 5.16s system 90% cpu 20.531 total

gburek@gburek-ltm2:~/code/pg-twitter
&gt; plv8x -l
module.js:457
    throw err;
    ^

Error: Cannot find module &amp;lsquo;../lib/cli.js&amp;rsquo;
    at Function.Module._resolveFilename (module.js:455:15)
    at Function.Module._load (module.js:403:25)
    at Module.require (module.js:483:17)
    at require (internal/module.js:20:19)
    at Object.&lt;anonymous&gt; (/Users/gburek/.nvm/versions/node/v6.7.0/lib/node_modules/plv8x/bin/plv8x:2:1)
    at Module._compile (module.js:556:32)
    at Object.Module._extensions..js (module.js:565:10)
    at Module.load (module.js:473:32)
    at tryModuleLoad (module.js:432:12)
    at Function.Module._load (module.js:424:3)
&amp;rdquo;`

What am I doing with my life?

OK So let&amp;rsquo;s actually follow the [README on github](https://github.com/clkao/plv8x#install-plv8x)

&amp;ldquo;`
gburek@gburek-ltm2:~/code
&gt; git clone git://github.com/clkao/plv8x.git; cd plv8x
Cloning into &amp;lsquo;plv8x&amp;rsquo;&amp;hellip;
remote: Counting objects: 1091, done.
remote: Total 1091 (delta 0), reused 0 (delta 0), pack-reused 1091
Receiving objects: 100% (1091/1091), 188.83 KiB | 0 bytes/s, done.
Resolving deltas: 100% (564/564), done.
Checking connectivity&amp;hellip; done.

gburek@gburek-ltm2:~/code/plv8x
&gt; npm i -g .

&gt; plv8x@0.7.0 prepublish /Users/gburek/code/plv8x
&gt; env PATH=&amp;rdquo;./node_modules/.bin:$PATH&amp;quot; lsc -cj package.ls &amp;&amp;
env PATH=&amp;ldquo;./node_modules/.bin:$PATH&amp;rdquo; lsc -bc -o lib src

env: lsc: No such file or directory

npm ERR! addLocal Could not install /Users/gburek/code/plv8x
npm ERR! Darwin 15.6.0
npm ERR! argv &amp;ldquo;/Users/gburek/.nvm/versions/node/v6.7.0/bin/node&amp;rdquo; &amp;ldquo;/Users/gburek/.nvm/versions/node/v6.7.0/bin/npm&amp;rdquo; &amp;ldquo;i&amp;rdquo; &amp;ldquo;-g&amp;rdquo; &amp;ldquo;.&amp;rdquo;
npm ERR! node v6.7.0
npm ERR! npm  v3.10.3
npm ERR! file sh
npm ERR! code ELIFECYCLE
npm ERR! errno ENOENT
npm ERR! syscall spawn
npm ERR! plv8x@0.7.0 prepublish: `env PATH=&amp;ldquo;./node_modules/.bin:$PATH&amp;rdquo; lsc -cj package.ls &amp;&amp;
npm ERR! env PATH=&amp;ldquo;./node_modules/.bin:$PATH&amp;rdquo; lsc -bc -o lib src`
npm ERR! spawn ENOENT
npm ERR!
npm ERR! Failed at the plv8x@0.7.0 prepublish script &amp;lsquo;env PATH=&amp;ldquo;./node_modules/.bin:$PATH&amp;rdquo; lsc -cj package.ls &amp;&amp;
npm ERR! env PATH=&amp;ldquo;./node_modules/.bin:$PATH&amp;rdquo; lsc -bc -o lib src&amp;rsquo;.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the plv8x package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     env PATH=&amp;ldquo;./node_modules/.bin:$PATH&amp;rdquo; lsc -cj package.ls &amp;&amp;
npm ERR! env PATH=&amp;ldquo;./node_modules/.bin:$PATH&amp;rdquo; lsc -bc -o lib src
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs plv8x
npm ERR! Or if that isn&amp;rsquo;t available, you can get their info via:
npm ERR!     npm owner ls plv8x
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /Users/gburek/code/plv8x/npm-debug.log
&amp;ldquo;`

Welp. Maybe it needs to be installed locally?

&amp;rdquo;`
gburek@gburek-ltm2:~/code/plv8x
&gt; npm install
npm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue
npm WARN deprecated to-iso-string@0.0.2: to-iso-string has been deprecated, use @segment/to-iso-string instead.
npm WARN deprecated jade@0.26.3: Jade has been renamed to pug, please install the latest version of pug instead of jade
npm WARN deprecated minimatch@0.3.0: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue

&gt; libpq@1.8.5 install /Users/gburek/code/plv8x/node_modules/libpq
&gt; node-gyp rebuild

gyp WARN download NVM_NODEJS_ORG_MIRROR is deprecated and will be removed in node-gyp v4, please use NODEJS_ORG_MIRROR
gyp WARN download NVM_NODEJS_ORG_MIRROR is deprecated and will be removed in node-gyp v4, please use NODEJS_ORG_MIRROR
gyp WARN download NVM_NODEJS_ORG_MIRROR is deprecated and will be removed in node-gyp v4, please use NODEJS_ORG_MIRROR
  CXX(target) Release/obj.target/addon/src/connection.o
  CXX(target) Release/obj.target/addon/src/connect-async-worker.o
  CXX(target) Release/obj.target/addon/src/addon.o
  SOLINK_MODULE(target) Release/addon.node
clang: warning: libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9

&gt; plv8x@0.7.0 prepublish /Users/gburek/code/plv8x
&gt; env PATH=&amp;ldquo;./node_modules/.bin:$PATH&amp;rdquo; lsc -cj package.ls &amp;&amp;
env PATH=&amp;ldquo;./node_modules/.bin:$PATH&amp;rdquo; lsc -bc -o lib src

plv8x@0.7.0 /Users/gburek/code/plv8x
&amp;hellip;
gburek@gburek-ltm2:~/code/plv8x
&gt; find . -name plv8x
./bin/plv8x
&amp;ldquo;`

&lt;/details&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gburek@gburek-ltm2:~/code/plv8x
&amp;gt; ./bin/plv8x -l
plv8x: 392.33 kB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;YES IT WORKS. Who would have guessed this npm module was only usable when
executed directly in its source tree and installed both locally and globally?&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s see what is happening on the db (Heroku per line logging preamble
omitted):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gburek@gburek-ltm2:~/code/pg-twitter
&amp;gt; heroku logs -t
[15-1] LOG:  statement:
[15-2]  SET client_min_messages TO WARNING;
[15-3]  DO $PLV8X_EOF$ BEGIN
[15-4]
[15-5]  DROP FUNCTION IF EXISTS plv8x.json_eval (code text,data plv8x.json) CASCADE;
[15-6]  EXCEPTION WHEN OTHERS THEN END; $PLV8X_EOF$;
[15-7]
[15-8]  CREATE FUNCTION plv8x.json_eval (code text,data plv8x.json) RETURNS plv8x.json AS $PLV8X__BODY__$
[15-9]  if (typeof plv8x == 'undefined') plv8.execute('select plv8x.boot()', []);;
[15-10]         return JSON.stringify((eval(function (code, data){
[15-11]               return eval(plv8x.xpressionToBody(code)).apply(data);
[15-12]             }))(code,JSON.parse(data)));
[15-13]         $PLV8X__BODY__$ LANGUAGE plv8 IMMUTABLE STRICT;
[16-1] NOTICE:  drop cascades to operator &amp;lt;|(text,plv8x.json)
[16-2] CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS plv8x.json_eval (code text,data plv8x.json) CASCADE"
[16-3]  PL/pgSQL function inline_code_block line 3 at SQL statement
[17-1] LOG:  statement:
[17-2]  SET client_min_messages TO WARNING;
[17-3]  DO $PLV8X_EOF$ BEGIN
[17-4]
[17-5]  DROP FUNCTION IF EXISTS plv8x.json_eval_ls (code text) CASCADE;
[17-6]  EXCEPTION WHEN OTHERS THEN END; $PLV8X_EOF$;
[17-7]
[17-8]  CREATE FUNCTION plv8x.json_eval_ls (code text) RETURNS plv8x.json AS $PLV8X__BODY__$
[17-9]  if (typeof plv8x == 'undefined') plv8.execute('select plv8x.boot()', []);;
[17-10]         return JSON.stringify((eval(function (code){
[17-11]               return eval(plv8x.xpressionToBody("~&amp;gt;" + code)).apply(this);
[17-12]             }))(code));
[17-13]         $PLV8X__BODY__$ LANGUAGE plv8 IMMUTABLE STRICT;
[18-1] NOTICE:  drop cascades to operator ~&amp;gt;(NONE,text)
[18-2] CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS plv8x.json_eval_ls (code text) CASCADE"
[18-3]  PL/pgSQL function inline_code_block line 3 at SQL statement
[19-1] LOG:  statement:
[19-2]  SET client_min_messages TO WARNING;
[19-3]  DO $PLV8X_EOF$ BEGIN
[19-4]
[19-5]  DROP FUNCTION IF EXISTS plv8x.json_eval_ls (data plv8x.json,code text) CASCADE;
[19-6]  EXCEPTION WHEN OTHERS THEN END; $PLV8X_EOF$;
[19-7]
[19-8]  CREATE FUNCTION plv8x.json_eval_ls (data plv8x.json,code text) RETURNS plv8x.json AS $PLV8X__BODY__$
[19-9]  if (typeof plv8x == 'undefined') plv8.execute('select plv8x.boot()', []);;
[19-10]         return JSON.stringify((eval(function (data, code){
[19-11]               return eval(plv8x.xpressionToBody("~&amp;gt;" + code)).apply(data);
[19-12]             }))(JSON.parse(data),code));
[19-13]         $PLV8X__BODY__$ LANGUAGE plv8 IMMUTABLE STRICT;
[20-1] NOTICE:  drop cascades to operator ~&amp;gt;(plv8x.json,text)
[20-2] CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS plv8x.json_eval_ls (data plv8x.json,code text) CASCADE"
[20-3]  PL/pgSQL function inline_code_block line 3 at SQL statement
[21-1] LOG:  statement:
[21-2]  SET client_min_messages TO WARNING;
[21-3]  DO $PLV8X_EOF$ BEGIN
[21-4]
[21-5]  DROP FUNCTION IF EXISTS plv8x.json_eval_ls (code text,data plv8x.json) CASCADE;
[21-6]  EXCEPTION WHEN OTHERS THEN END; $PLV8X_EOF$;
[21-7]
[21-8]  CREATE FUNCTION plv8x.json_eval_ls (code text,data plv8x.json) RETURNS plv8x.json AS $PLV8X__BODY__$
[21-9]  if (typeof plv8x == 'undefined') plv8.execute('select plv8x.boot()', []);;
[21-10]         return JSON.stringify((eval(function (code, data){
[21-11]               return eval(plv8x.xpressionToBody("~&amp;gt;" + code)).apply(data);
[21-12]             }))(code,JSON.parse(data)));
[21-13]         $PLV8X__BODY__$ LANGUAGE plv8 IMMUTABLE STRICT;
[22-1] NOTICE:  drop cascades to operator &amp;lt;~(text,plv8x.json)
[22-2] CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS plv8x.json_eval_ls (code text,data plv8x.json) CASCADE"
[22-3]  PL/pgSQL function inline_code_block line 3 at SQL statement
[23-1] LOG:  statement: DROP OPERATOR IF EXISTS |&amp;gt; (NONE, text); CREATE OPERATOR |&amp;gt; (
[23-2]      RIGHTARG = text,
[23-3]      PROCEDURE = plv8x.json_eval
[23-4]  );
[23-5]  DROP OPERATOR IF EXISTS |&amp;gt; (plv8x.json, text); CREATE OPERATOR |&amp;gt; (
[23-6]      LEFTARG = plv8x.json,
[23-7]      RIGHTARG = text,
[23-8]      COMMUTATOR = &amp;lt;|,
[23-15]             PROCEDURE = plv8x.json_eval
[23-10]         );
[23-9]      PROCEDURE = plv8x.json_eval
[23-16]         );
[23-14]             COMMUTATOR = |&amp;gt;,
[23-17]
[23-13]             RIGHTARG = plv8x.json,
[23-18]         DROP OPERATOR IF EXISTS ~&amp;gt; (NONE, text); CREATE OPERATOR ~&amp;gt; (
[23-11]         DROP OPERATOR IF EXISTS &amp;lt;| (text, plv8x.json); CREATE OPERATOR &amp;lt;| (
[23-19]             RIGHTARG = text,
[23-12]             LEFTARG = text,
[23-20]             PROCEDURE = plv8x.json_eval_ls
[23-21]         );
[23-22]         DROP OPERATOR IF EXISTS ~&amp;gt; (plv8x.json, text); CREATE OPERATOR ~&amp;gt; (
[23-23]             LEFTARG = plv8x.json,
[23-24]             RIGHTARG = text,
[23-25]             COMMUTATOR = &amp;lt;~,
[23-27]         );
[23-26]             PROCEDURE = plv8x.json_eval_ls
[23-28]         DROP OPERATOR IF EXISTS &amp;lt;~ (text, plv8x.json); CREATE OPERATOR &amp;lt;~ (
[23-29]             LEFTARG = text,
[23-30]             RIGHTARG = plv8x.json,
[23-31]             COMMUTATOR = ~&amp;gt;,
[23-32]             PROCEDURE = plv8x.json_eval_ls
[23-33]         );
[24-1] NOTICE:  operator |&amp;gt; does not exist, skipping
[25-1] NOTICE:  operator |&amp;gt; does not exist, skipping
[26-1] NOTICE:  operator ~&amp;gt; does not exist, skipping
[27-1] NOTICE:  operator ~&amp;gt; does not exist, skipping
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is not great. It seems that &lt;code&gt;plv8x&lt;/code&gt; wants to create custom operators that
are similar to ones in Livescript (&lt;code&gt;|&amp;gt;&lt;/code&gt; pipeline operator) and CoffeeScript
(&lt;code&gt;-&amp;gt;&lt;/code&gt; thin arrows which are translated as &lt;code&gt;~&amp;gt;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;del&gt;Custom operators are superuser only and run the risk of crashing the
postmaster, so many Postgres providers do not support them.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;However, it seems that they are not critical to using vanilla js and node, so
we may continue.&lt;/del&gt;&lt;/p&gt;

&lt;h3 id="update-only-custom-default-operators-seem-to-not-work-after-altering-the-search_path-of-the-db-these-appear-to-be-created-properly"&gt;&lt;em&gt;UPDATE:&lt;/em&gt; Only custom &lt;em&gt;default&lt;/em&gt; operators seem to not work. After altering the search_path of the db, these appear to be created properly.&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt; select * from pg_operator where oprcode::text ilike 'plv8%';
 oprname | oprnamespace | oprowner | oprkind | oprcanmerge | oprcanhash | oprleft | oprright | oprresult | oprcom | oprnegate |      oprcode       | oprrest | oprjoin
---------+--------------+----------+---------+-------------+------------+---------+----------+-----------+--------+-----------+--------------------+---------+---------
 |&amp;gt;      |        17017 |    16384 | l       | f           | f          |       0 |       25 |     17027 |      0 |         0 | plv8x.json_eval    | -       | -
 |&amp;gt;      |        17017 |    16384 | b       | f           | f          |   17027 |       25 |     17027 |  17316 |         0 | plv8x.json_eval    | -       | -
 &amp;lt;|      |        17017 |    16384 | b       | f           | f          |      25 |    17027 |     17027 |  17317 |         0 | plv8x.json_eval    | -       | -
 ~&amp;gt;      |        17017 |    16384 | l       | f           | f          |       0 |       25 |     17027 |      0 |         0 | plv8x.json_eval_ls | -       | -
 ~&amp;gt;      |        17017 |    16384 | b       | f           | f          |   17027 |       25 |     17027 |  17320 |         0 | plv8x.json_eval_ls | -       | -
 &amp;lt;~      |        17017 |    16384 | b       | f           | f          |      25 |    17027 |     17027 |  17321 |         0 | plv8x.json_eval_ls | -       | -
(6 rows)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="how-does-this-work"&gt;How does this work?&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s take a look at the db:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt; \dn
     List of schemas
  Name  |     Owner
--------+----------------
 plv8x  | uah8s1lfn60k9k
 public | uah8s1lfn60k9k
(2 rows)

&amp;gt; \d plv8x.
                 Table "plv8x.code"
  Column  |            Type             | Modifiers
----------+-----------------------------+-----------
 name     | text                        | not null
 code     | text                        |
 load_seq | integer                     |
 updated  | timestamp without time zone |
Indexes:
    "code_pkey" PRIMARY KEY, btree (name)

  Index "plv8x.code_pkey"
 Column | Type | Definition
--------+------+------------
 name   | text | name
primary key, btree, for table "plv8x.code"

&amp;gt; \d plv8x.code
                 Table "plv8x.code"
  Column  |            Type             | Modifiers
----------+-----------------------------+-----------
 name     | text                        | not null
 code     | text                        |
 load_seq | integer                     |
 updated  | timestamp without time zone |
Indexes:
    "code_pkey" PRIMARY KEY, btree (name)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wow, ok so node modules are rows in this table?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt; select name, substring(code from 1 for 1300), load_seq, updated from plv8x.code;

name      | plv8x
substring | !function(e){if("object"==typeof exports&amp;amp;&amp;amp;"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&amp;amp;&amp;amp;define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&amp;amp;&amp;amp;(f=self),f.plv8x=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&amp;amp;&amp;amp;require;if(!u&amp;amp;&amp;amp;a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&amp;amp;&amp;amp;require;for(var o=0;o&amp;lt;r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){+
          | // Generated by LiveScript
          | var ref$, _mk_func, compileCoffeescript, compileLivescript, xpressionToBody, plv8xSql, operatorsSql, _eval, _apply, _require, _mk_json_eval, _mk_json_eval_ls, _boot
          | ref$ = require('..'), _mk_func = ref$._mk_func, compileCoffeescript = ref$.compileCoffeescript, compileLivescript = ref$.compileLivescript, xpressionToBody = ref$.xpressionToBody
          | ref$ = require('./sql'), plv8xSql = ref$.plv8xSql, operatorsSql = ref$.operatorsSql
          | module.exports = function(drop,
load_seq  |
updated   | 2016-10-08 16:27:59

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Not even minified. Cool.&lt;/p&gt;

&lt;h2 id="install-a-node-package-into-the-db"&gt;Install a node package into the db&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s install something.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gburek@gburek-ltm2:~/code/plv8x
&amp;gt; ./bin/plv8x -i twitter-node-client

gburek@gburek-ltm2:~/code/plv8x
&amp;gt; ./bin/plv8x -l
plv8x: 392.33 kB
twitter-node-client: 685.9 kB

&amp;gt; select name, octet_length(code), load_seq, updated from plv8x.code;
        name         | octet_length | load_seq |       updated
---------------------+--------------+----------+---------------------
 plv8x               |       392331 |          | 2016-10-08 16:27:59
 twitter-node-client |       685900 |          | 2016-10-11 17:20:21
(2 rows)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cool. What about running something simple?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gburek@gburek-ltm2:~/code/plv8x
&amp;gt; ./bin/plv8x -e 'require("qs").parse("foo=bar&amp;amp;baz=1")'
WARNING:  failed to load module buffer:
WARNING:  failed to load module qs: Error: no window object present
WARNING:  Error: no window object present
    at eval (eval at &amp;lt;anonymous&amp;gt; (boot:27:23), &amp;lt;anonymous&amp;gt;:16168:15)
    at Object../lib/request (eval at &amp;lt;anonymous&amp;gt; (boot:27:23), &amp;lt;anonymous&amp;gt;:16200:3)
    at s (eval at &amp;lt;anonymous&amp;gt; (boot:27:23), &amp;lt;anony
/Users/gburek/code/plv8x/lib/index.js:29
        throw err;
        ^

Error: ERROR:  TypeError: Cannot call method 'parse' of undefined
DETAIL:  undefined() LINE 0: ((function(){return require("qs").parse("foo=bar&amp;amp;baz=1")}))()

    at Client._readError (/Users/gburek/code/plv8x/node_modules/pg-native/index.js:80:13)
    at Client._read (/Users/gburek/code/plv8x/node_modules/pg-native/index.js:121:19)
    at emitNone (events.js:86:13)
    at PQ.emit (events.js:185:7)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This isn&amp;rsquo;t good. What about defining a function?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gburek@gburek-ltm2:~/code/plv8x
&amp;gt; ./bin/plv8x -f 'plv8x.json parse_qs(text)=qs:parse'
ok plv8x.json parse_qs(text)

&amp;gt; SELECT parse_qs('foo=bar&amp;amp;baz=1') AS qs;
WARNING:  01000: failed to load module buffer:
LOCATION:  plv8_Elog, plv8_func.cc:327
WARNING:  01000: failed to load module qs: Error: no window object present
LOCATION:  plv8_Elog, plv8_func.cc:327
WARNING:  01000: Error: no window object present
    at eval (eval at &amp;lt;anonymous&amp;gt; (boot:27:23), &amp;lt;anonymous&amp;gt;:16168:15)
    at Object../lib/request (eval at &amp;lt;anonymous&amp;gt; (boot:27:23), &amp;lt;anonymous&amp;gt;:16200:3)
    at s (eval at &amp;lt;anonymous&amp;gt; (boot:27:23), &amp;lt;anony
LOCATION:  plv8_Elog, plv8_func.cc:327
ERROR:  XX000: TypeError: Cannot read property 'parse' of undefined
DETAIL:  parse_qs() LINE 4:   return plv8x.require('qs').parse.apply(this, arguments);
LOCATION:  rethrow, plv8.cc:1649
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It looks like the lack of custom operators is preventing this code from
running.&lt;/p&gt;

&lt;h1 id="failure"&gt;Failure?&lt;/h1&gt;

&lt;h3 id="update-it-seems-that-the-search-path-of-the-db-was-not-wide-enough-and-including-all-possible-schemas-allows-operator-creation-and-for-modules-to-be-loaded-and-run"&gt;UPDATE: It seems that the search path of the db was not wide enough, and including all possible schemas, allows operator creation and for modules to be loaded and run:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt; alter database df5f7ilg16vje set search_path to "$user", public, plv8, plv8x;
ALTER DATABASE
Time: 79.494 ms
&amp;gt; SELECT |&amp;gt;'(require("moment")()).format()';
          ?column?
-----------------------------
 "2016-10-12T20:30:26+00:00"
(1 row)

Time: 76.703 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Part 2 will continue down this path to running node/npm in Postgres and will
show how the above was found.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;After all this exploration, I think using plv8x with a Heroku Postgres db is
not possible. The use of custom operators seems to extend beyond the ability to
use LiveScript and Coffeescript and prevents loading vanilla modules.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;I am not too discouraged, however, as
&lt;a href="https://github.com/langateam/node-plv8"&gt;node-plv8&lt;/a&gt; and
&lt;a href="https://github.com/mgutz/plv8-bedrock"&gt;plv8-bedrock&lt;/a&gt; seem like viable
alternatives. I&amp;rsquo;ll try those next!&lt;/del&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Lessons from Automatic Incident Resolution for a Million Databases - SREcon16 EU</title>
    <link rel="alternate" href="/2016/10/06/lessons-from-automatic-incident-resolution-for-a-million-databases-srecon16-eu/"/>
    <id>/2016/10/06/lessons-from-automatic-incident-resolution-for-a-million-databases-srecon16-eu/</id>
    <published>2016-10-06T22:08:00+00:00</published>
    <updated>2016-10-06T22:08:00+00:00</updated>
    <author>
      <name>Greg Burek</name>
    </author>
    <content type="html">&lt;p&gt;In July, I traveled to Dublin, Ireland to give a short talk about automtic
incident resolution as we do it at Heroku Data. The original video may be found
on the &lt;a href="https://www.usenix.org/conference/srecon16europe/program/presentation/burek"&gt;SREcon16 EU site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The slides, including working gifs and a video of the talk are embedded below.&lt;/p&gt;

&lt;div class='slide'&gt;
  &lt;iframe src="https://docs.google.com/presentation/d/1JLMFNUBh0EI5DihNw5Jsq7Gh1ePe6AeoFdFY5mz3_jM/embed?start=false&amp;loop=false&amp;delayms=3000" frameborder="0" width="760" height="475" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"&gt;&lt;/iframe&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;div class='slide'&gt;
  &lt;iframe width="760" height="475" src="https://www.youtube.com/embed/hrNsVSQdXxU" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
  &lt;/iframe&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>Installing bcc to evaluate BPF and Postgres</title>
    <link rel="alternate" href="/2016/10/04/installing-bcc-to-evaluate-bpf-and-postgres/"/>
    <id>/2016/10/04/installing-bcc-to-evaluate-bpf-and-postgres/</id>
    <published>2016-10-04T21:51:00+00:00</published>
    <updated>2016-10-04T21:51:00+00:00</updated>
    <author>
      <name>Greg Burek</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="https://twitter.com/t_crayford"&gt;@t_crayford&lt;/a&gt; sent me Brendan Gregg&amp;rsquo;s latest
missive about performance tracing, this time for &lt;a href="http://www.brendangregg.com/blog/2016-10-04/linux-bcc-mysqld-qslower.html"&gt;Linux MySQL Slow Query Tracing with bcc/BPF&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/iovisor/bcc"&gt;bcc&lt;/a&gt; stands for &amp;lsquo;BPF Compiler Collection&amp;rsquo; and
&lt;a href="https://en.wikipedia.org/wiki/Berkeley_Packet_Filter"&gt;BPF&lt;/a&gt; stands for
&amp;lsquo;Berkeley Packet Filter&amp;rsquo;. From the bcc
&lt;a href="https://github.com/iovisor/bcc/blob/60393ea5dd966d33ff24929f6981df09473cbb1b/README.md"&gt;README&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;BCC is a toolkit for creating efficient kernel tracing and manipulation
programs, and includes several useful tools and examples. It makes use of
extended BPF (Berkeley Packet Filters), formally known as eBPF, a new feature
that was first added to Linux 3.15. Much of what BCC uses requires Linux 4.1
and above.&lt;/p&gt;

&lt;p&gt;eBPF was &lt;a href="https://lkml.org/lkml/2015/4/14/232"&gt;described&lt;/a&gt; by Ingo Molnár as:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One of the more interesting features in this cycle is the ability to attach
eBPF programs (user-defined, sandboxed bytecode executed by the kernel) to
kprobes. This allows user-defined instrumentation on a live kernel image
that can never crash, hang or interfere with the kernel negatively.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;BCC makes BPF programs easier to write, with kernel instrumentation in C (and
includes a C wrapper around LLVM), and front-ends in Python and lua. It is
suited for many tasks, including performance analysis and network traffic
control.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As I work for Heroku Postgres, I wanted to investigate something similar for
Postgres, running on our infrastructure. First thing to check was if it was
even possible on our systems, using &lt;a href="https://github.com/iovisor/bcc/blob/60393ea5dd966d33ff24929f6981df09473cbb1b/INSTALL.md"&gt;bcc&amp;rsquo;s INSTALL
instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;New Postgres databases get Ubuntu Trusty instances with
&lt;code&gt;linux-generic-lts-xenial&lt;/code&gt; kernels of the 4.4 series:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;=&amp;gt; select version();
                                             version
-------------------------------------------------------------------------------------------------
 PostgreSQL 9.5.4 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 4.8.2-19ubuntu1) 4.8.2, 64-bit
(1 row)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~$ uname -a
Linux ip-10-0-10-230 4.4.0-38-generic #57~14.04.1-Ubuntu SMP Tue Sep 6 17:20:43 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This seems to satisfy the &lt;code&gt;Linux kernel version 4.1 or newer&lt;/code&gt; requirement.&lt;/p&gt;

&lt;p&gt;Next thing to check is if the kernel has been compiled properly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~$ cat /boot/config-4.4.0-38-generic | grep BPF
CONFIG_BPF=y
CONFIG_BPF_SYSCALL=y
CONFIG_NETFILTER_XT_MATCH_BPF=m
CONFIG_NET_CLS_BPF=m
CONFIG_NET_ACT_BPF=m
CONFIG_BPF_JIT=y
CONFIG_HAVE_BPF_JIT=y
CONFIG_BPF_EVENTS=y
CONFIG_TEST_BPF=m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This looks ok! Next up is to install the repo and tools:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D4284CDD
...
gpg: requesting key D4284CDD from hkp server keyserver.ubuntu.com
gpg: key D4284CDD: public key "Brenden Blanco &amp;lt;bblanco@plumgrid.com&amp;gt;" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
~$ echo "deb https://repo.iovisor.org/apt trusty main" | sudo tee /etc/apt/sources.list.d/iovisor.list
deb https://repo.iovisor.org/apt trusty main
~$ sudo apt-get update
...
Fetched 4,322 kB in 3s (1,269 kB/s)
Reading package lists... Done
~$ sudo apt-get install binutils bcc bcc-tools libbcc-examples python-bcc
Reading package lists... Done
Building dependency tree
Reading state information... Done
binutils is already the newest version.
binutils set to manually installed.
The following extra packages will be installed:
  bin86 elks-libc libbcc
The following NEW packages will be installed:
  bcc bcc-tools bin86 elks-libc libbcc libbcc-examples python-bcc
0 upgraded, 7 newly installed, 0 to remove and 30 not upgraded.
Need to get 10.4 MB of archives.
After this operation, 36.6 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
...
~$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now to test this out:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# /usr/share/bcc/tools/tplist -l /usr/lib/postgresql/9.5/bin/postgres
Traceback (most recent call last):
  File "/usr/share/bcc/tools/tplist", line 16, in &amp;lt;module&amp;gt;
    from bcc import USDTReader
ImportError: cannot import name USDTReader
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Welp. Looking at the source of &lt;a href="https://github.com/iovisor/bcc/blob/6e60fbc8a672d8f29cab688ddc0df6d43a96c300/tools/tplist.py"&gt;tplist on current master&lt;/a&gt;,
the &lt;a href="https://github.com/iovisor/bcc/commit/69e361ac66fbf3baadb1f7cf21762df61ad7a5a9#diff-8189c35f15538919a795b3f18ad0db66L16"&gt;most recent commit&lt;/a&gt;
removes &lt;code&gt;USDTReader&lt;/code&gt;. Time to try the nightly builds:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~$ echo "deb [trusted=yes] https://repo.iovisor.org/apt/trusty trusty-nightly main" | sudo tee /etc/apt/sources.list.d/iovisor.list
~$ sudo apt-get update
~$ sudo apt-get install bcc-tools
~$ sudo /usr/share/bcc/tools/tplist -l /usr/lib/postgresql/9.5/bin/postgres
'USDT' object has no attribute 'enumerate_probes'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Welp. &lt;code&gt;enumerate_probes&lt;/code&gt; was added in another part of the &lt;a href="https://github.com/iovisor/bcc/commit/69e361ac66fbf3baadb1f7cf21762df61ad7a5a9#diff-4cf0bde404ce4b67b2961b61419fa23fR58"&gt;above patch&lt;/a&gt;, so I think other things
need to be updated, as well.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~$ sudo apt-get install binutils bcc bcc-tools libbcc-examples python-bcc
Reading package lists... Done
Building dependency tree
Reading state information... Done
bcc is already the newest version.
binutils is already the newest version.
bcc-tools is already the newest version.
The following packages will be upgraded:
  libbcc-examples python-bcc
2 upgraded, 0 newly installed, 0 to remove and 31 not upgraded.
Need to get 302 kB of archives.
After this operation, 6,144 B of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 https://repo.iovisor.org/apt/trusty/ trusty-nightly/main libbcc-examples amd64 0.2.0-22.git.12a09dc [267 kB]
Get:2 https://repo.iovisor.org/apt/trusty/ trusty-nightly/main python-bcc all 0.2.0-22.git.12a09dc [34.3 kB]
Fetched 302 kB in 0s (319 kB/s)
(Reading database ... 91427 files and directories currently installed.)
Preparing to unpack .../libbcc-examples_0.2.0-22.git.12a09dc_amd64.deb ...
Unpacking libbcc-examples (0.2.0-22.git.12a09dc) over (0.2.0-1) ...
Preparing to unpack .../python-bcc_0.2.0-22.git.12a09dc_all.deb ...
Unpacking python-bcc (0.2.0-22.git.12a09dc) over (0.2.0-1) ...
Setting up libbcc-examples (0.2.0-22.git.12a09dc) ...
Setting up python-bcc (0.2.0-22.git.12a09dc) ...
~$ less /usr/lib/python2.7/dist-packages/bcc/usdt.py
~$ sudo /usr/share/bcc/tools/tplist -l /usr/lib/postgresql/9.5/bin/postgres
Traceback (most recent call last):
  File "/usr/share/bcc/tools/tplist", line 16, in &amp;lt;module&amp;gt;
    from bcc import USDT
  File "/usr/lib/python2.7/dist-packages/bcc/__init__.py", line 28, in &amp;lt;module&amp;gt;
    from .libbcc import lib, _CB_TYPE, bcc_symbol
  File "/usr/lib/python2.7/dist-packages/bcc/libbcc.py", line 160, in &amp;lt;module&amp;gt;
    lib.bcc_usdt_get_probe_argctype.restype = ct.c_char_p
  File "/usr/lib/python2.7/ctypes/__init__.py", line 378, in __getattr__
    func = self.__getitem__(name)
  File "/usr/lib/python2.7/ctypes/__init__.py", line 383, in __getitem__
    func = self._FuncPtr((name_or_ordinal, self))
AttributeError: /usr/lib/x86_64-linux-gnu/libbcc.so.0: undefined symbol: bcc_usdt_get_probe_argctype
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One more error. This time in &lt;code&gt;libbcc&lt;/code&gt;. Seems like another package to pull from nightly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~$ sudo apt-get install libbcc
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following packages will be upgraded:
  libbcc
1 upgraded, 0 newly installed, 0 to remove and 30 not upgraded.
Need to get 9,505 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 https://repo.iovisor.org/apt/trusty/ trusty-nightly/main libbcc amd64 0.2.0-22.git.12a09dc [9,505 kB]
Fetched 9,505 kB in 2s (3,276 kB/s)
(Reading database ... 91427 files and directories currently installed.)
Preparing to unpack .../libbcc_0.2.0-22.git.12a09dc_amd64.deb ...
Unpacking libbcc (0.2.0-22.git.12a09dc) over (0.2.0-1) ...
Setting up libbcc (0.2.0-22.git.12a09dc) ...
Processing triggers for libc-bin (2.19-0ubuntu6.9) ...
~$ sudo /usr/share/bcc/tools/tplist -l /usr/lib/postgresql/9.5/bin/postgres
~$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OK! No errors. This is good, as it answers my questions as to if this postgres
package was compiled with the &lt;code&gt;--enable-dtrace&lt;/code&gt;. I can further confirm with
&lt;code&gt;readelf -n&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~$ readelf -n /usr/lib/postgresql/9.5/bin/postgres

Displaying notes found at file offset 0x00000254 with length 0x00000020:
  Owner                 Data size       Description
  GNU                  0x00000010       NT_GNU_ABI_TAG (ABI version tag)
    OS: Linux, ABI: 2.6.24

Displaying notes found at file offset 0x00000274 with length 0x00000024:
  Owner                 Data size       Description
  GNU                  0x00000014       NT_GNU_BUILD_ID (unique build ID bitstring)
    Build ID: 6990037682e6668adc87ae7a6b82e4640959cf52
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are no USDT or bpf traces found here, so next step is to recompile
postgres with &lt;code&gt;--enable-dtrace&lt;/code&gt; and see what probes are available to use with
BPF (spoiler: &lt;a href="https://www.postgresql.org/docs/current/static/dynamic-trace.html"&gt;there are a lot of them&lt;/a&gt;).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Stream a remote file to S3</title>
    <link rel="alternate" href="/2015/06/20/stream-a-remote-file-to-s3/"/>
    <id>/2015/06/20/stream-a-remote-file-to-s3/</id>
    <published>2015-06-21T00:07:00+00:00</published>
    <updated>2015-06-21T00:07:00+00:00</updated>
    <author>
      <name>Greg Burek</name>
    </author>
    <content type="html">&lt;p&gt;While attempting to work with my gif collection, I was experimenting with how
to capture gifs from the internet and place them into a S3 bucket for later
use. I found that it was possible to stream a remote file directly to S3.&lt;/p&gt;

&lt;p&gt;Using the &lt;code&gt;aws-sdk&lt;/code&gt; &lt;a href="https://github.com/aws/aws-sdk-ruby"&gt;gem version 2&lt;/a&gt;, and
the &lt;code&gt;open-uri&lt;/code&gt; module of the &lt;a href="http://ruby-doc.org/stdlib-2.2.2/libdoc/open-uri/rdoc/OpenURI.html"&gt;ruby standard
library&lt;/a&gt;,
one can link the two IO streams together fairly easily:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'aws-sdk'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'open-uri'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'sequel'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'digest/md5'&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RemoteFile&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;s3&lt;/span&gt;
    &lt;span class="vi"&gt;@s3&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="no"&gt;Aws&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;S3&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;region: &lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'AWS_REGION'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;md5_hash&lt;/span&gt;
    &lt;span class="no"&gt;Digest&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MD5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket_name&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md5_hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;url&lt;/span&gt;
    &lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;upload_to_s3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket_name&lt;/span&gt;&lt;span class="p"&gt;:)&lt;/span&gt;
    &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket_name&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;body: &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;RemoteFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https://i.imgur.com/DO3Hr4A.gif'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;upload_to_s3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;bucket_name: &lt;/span&gt;&lt;span class="s1"&gt;'mah_gifs'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This code snippet assumes you have &lt;code&gt;ENV[&amp;#39;AWS_ACCESS_KEY_ID&amp;#39;]&lt;/code&gt; and
&lt;code&gt;ENV[&amp;#39;AWS_SECRET_ACCESS_KEY&amp;#39;]&lt;/code&gt; set.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>DNS, eglibc and resolv-replace on Heroku</title>
    <link rel="alternate" href="/2015/02/22/dns-eglibc-and-resolv-replace-on-heroku/"/>
    <id>/2015/02/22/dns-eglibc-and-resolv-replace-on-heroku/</id>
    <published>2015-02-22T23:33:00+00:00</published>
    <updated>2015-02-22T23:33:00+00:00</updated>
    <author>
      <name>Greg Burek</name>
    </author>
    <content type="html">&lt;p&gt;2015-03-01: Fixed versions of eglibc are available for Ubuntu Precise and
Trusty. Time to update.&lt;/p&gt;

&lt;p&gt;I work on the team that runs &lt;a href="https://www.heroku.com/postgres"&gt;Heroku Postgres&lt;/a&gt;. As we have continued to grow, I
have been tracking an intermitent error with &lt;a href="https://devcenter.heroku.com/articles/rollbar"&gt;Rollbar&lt;/a&gt; that occurs about once
every 50,000 HTTP requests. As we are doing many hundreds of thousands of API
calls a minute to various services, this error can pop up fairly frequently and
in very inconvenient places. The most common traceback seems to indicate a
failure to resolve DNS:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;#&amp;lt;SocketError: getaddrinfo: Name or service not known&amp;gt;&lt;/span&gt;
&lt;span class="sr"&gt;/app/&lt;/span&gt;&lt;span class="n"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;879&lt;/span&gt;&lt;span class="ss"&gt;:in&lt;/span&gt; &lt;span class="s1"&gt;'initialize'&lt;/span&gt;
&lt;span class="sr"&gt;/app/&lt;/span&gt;&lt;span class="n"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;879&lt;/span&gt;&lt;span class="ss"&gt;:in&lt;/span&gt; &lt;span class="s1"&gt;'open'&lt;/span&gt;
&lt;span class="sr"&gt;/app/&lt;/span&gt;&lt;span class="n"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;879&lt;/span&gt;&lt;span class="ss"&gt;:in&lt;/span&gt; &lt;span class="s1"&gt;'block in connect'&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://lmgtfy.com/?q=SocketError%3A+getaddrinfo%3A+Name+or+service+not+known+heroku"&gt;Google&lt;/a&gt; led me to a &lt;a href="http://www.subelsky.com/2014/05/fixing-socketerror-getaddrinfo-name-or.html"&gt;pertinent blog post&lt;/a&gt; that recommended using ruby&amp;rsquo;s
&lt;a href="http://apidock.com/ruby/Resolv"&gt;Resolv&lt;/a&gt; library for all DNS requests via a script called &lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/resolv-replace.rb"&gt;resolv-replace&lt;/a&gt;.
Adding a single line to our initializers, &lt;code&gt;require resolv-replace&lt;/code&gt;, caused errors
while submitting Logplex messages to immediately drop:&lt;/p&gt;

&lt;p&gt;&lt;img src="/2015/02/22/dns-eglibc-and-resolv-replace-on-heroku/logplex_errors.png" alt="Logplex Errors" /&gt;&lt;/p&gt;

&lt;p&gt;As did errors from trying to interact with our monitoring service, Observatory:&lt;/p&gt;

&lt;p&gt;&lt;img src="/2015/02/22/dns-eglibc-and-resolv-replace-on-heroku/observatory_errors.png" alt="Observatory Errors" /&gt;&lt;/p&gt;

&lt;p&gt;In an internal thread, &lt;a href="https://twitter.com/freeformz"&gt;Ed Muller&lt;/a&gt; pointed out a &lt;a href="https://github.com/golang/go/issues/6336#issuecomment-66085142"&gt;golang work around&lt;/a&gt;
of a &lt;a href="https://sourceware.org/bugzilla/show_bug.cgi?id=15946"&gt;bug in glibc&lt;/a&gt; which is very likely to be a factor in this error:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Under high load, getaddrinfo() starts sending DNS queries to random
file descriptors, e.g. some unrelated socket connected to a remote service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As Heroku is a shared platform with multitenant runtime instances, it is
possible for a random runtime to experience high load and the &lt;a href="https://devcenter.heroku.com/articles/cedar-ubuntu-packages"&gt;cedar-14 glibc
binaries&lt;/a&gt; are known to be impacted by this bug. Version 2.20 of glibc has a
fix and as of &lt;a href="https://bazaar.launchpad.net/~ubuntu-branches/ubuntu/trusty/eglibc/trusty-security/revision/346"&gt;2.19-0ubuntu6.6&lt;/a&gt; and &lt;a href="https://bazaar.launchpad.net/~ubuntu-branches/ubuntu/precise/eglibc/precise-security/revision/316"&gt;2.15-0ubuntu10.11&lt;/a&gt; this fix was
backported to Ubuntu Precise and Trusty. &lt;s&gt;However, Ubuntu Precise currently
ships &lt;a href="http://packages.ubuntu.com/precise-updates/libc6"&gt;2.15-0ubuntu10.10&lt;/a&gt; and Trusty provides &lt;a href="http://packages.ubuntu.com/trusty-updates/libc6"&gt;2.19-0ubuntu6.5&lt;/a&gt;, so this
bug may continue to be a problem for some time to come.&lt;/s&gt;&lt;/p&gt;

&lt;p&gt;My immediate recommendation is to use language native DNS resolution like
&lt;code&gt;resolv-replace&lt;/code&gt; whenever possible, on Heroku or other systems. However, if you
require ipv6 or run into problems with &lt;a href="https://github.com/mperham/sidekiq/issues/1258#issuecomment-27389456"&gt;third party gems attempting to resolve
&lt;code&gt;nil&lt;/code&gt; addresses&lt;/a&gt;, and are stuck with the system DNS, upgrade yourself!
&lt;s&gt;please indicate that this bug affects you on the &lt;a href="https://bugs.launchpad.net/eglibc/+bug/1421393"&gt;Launchpad bug report
requesting backporting&lt;/a&gt; to supported versions of Ubuntu.&lt;/s&gt;&lt;/p&gt;

&lt;p&gt;Thanks to Ed Muller, Michael Hale, Keiko Oda, Steve Conklin, Terence Lee and
Richard Schneeman for help in figuring this out.&lt;/p&gt;
</content>
  </entry>
</feed>
